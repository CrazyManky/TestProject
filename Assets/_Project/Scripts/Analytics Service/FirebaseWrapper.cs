using _Project.Screpts.Interfaces;
using Cysharp.Threading.Tasks;
using Firebase;
using Firebase.Analytics;
using UnityEngine;

namespace _Project.Screpts.Analytics_Service
{
    public class FirebaseWrapper : IAnalytics
    {
        private FirebaseApp _app;

        public async UniTask Initialize()
        {
            Debug.Log("üî• –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase...");
            var dependencyStatus = await FirebaseApp.CheckAndFixDependenciesAsync();

            if (dependencyStatus == DependencyStatus.Available)
            {
                _app = FirebaseApp.DefaultInstance; // ‚úÖ –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä Firebase
                FirebaseAnalytics.SetAnalyticsCollectionEnabled(true);
                Debug.Log("‚úÖ Firebase —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω");
            }
            else
            {
                Debug.LogError($"‚ùå Firebase –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω: {dependencyStatus}");
                return;
            }

            Application.quitting += InvokeAppClose;
        }

        public void InvokeAppOpen()
        {
            FirebaseAnalytics.LogEvent(FirebaseAnalytics.EventAppOpen);
        }

        public void InvokeAppClose()
        {
            FirebaseAnalytics.LogEvent("App Closed");
            Application.quitting -= InvokeAppClose;
        }
    }
}